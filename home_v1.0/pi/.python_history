from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.stopProcessGroup('ezstre
exit
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.stopProcessGroup('ezstreamer')
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.stopProcessGroup('ezstreamer')
exit
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.getState()
exit
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.getState()
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.getState()
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.getState()
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.getState()
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('unix:///tmp/supervisor.sock')
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/RPC2')
server.supervisor.getState()
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://localhost:9001/')
server.supervisor.getState()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://127.0.0.1:9001/')
server.supervisor.getState()
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://127.0.1.1:9001/')
server.supervisor.getState()
server = ServerProxy('http://127.0.1.1:9001/RPC2')
server.supervisor.getState()
exit
exit()
from xmlrpc.client import ServerProxy
server = ServerProxy('http://127.0.1.1:9001/RPC2')
server.supervisor.getState()
exit()
exit
exit()
import subprocess
response = subprocess.check_output("sudo supervisorctl restart ezstreamer_watchdog", shell=True)
print(response)
exit()
import subprocess
response = subprocess.run('speedtest-cli --simple', shell=True, timeout=30)
response = subprocess.run('speedtest-cli --csv', shell=True, timeout=10)
response = subprocess.run('speedtest-cli --csv', shell=True, timeout=30)
print response
print(response)
response = subprocess.run('speedtest-cli --csv', shell=True, stdout=subprocess.PIPE, timeout=30).stdout.read()
response = subprocess.run('speedtest-cli --csv', shell=True, capture_output=True, timeout=30)
print(response)
print(resonse(0)
print(resonse[1])
print(resonse(1))
print(response)
exit
exit()
import subprocess
response = subprocess.check_output("ping -c 1 -I eth0 ez-streamer.com", shell=True)
print response
print (response)
import binascii
import simplejson as json
import binascii
import simplejson as json
import hashlib
D
import base64
import subproces
import subprocess
exit
exit()
import subprocess
status_command = "sudo supervisorctl status stream1"
response = subprocess.check_output(status_command, shell=True)
print(response)
print(response.split(" ")
)
print(response.split(" "))
print(response.split(b" "))
print(b" ".join(response.split())
print(b" ".join(response.split()))
clean_str = (b" ".join(response.split())).split(b" ")
print(clean_str)
exit()
exit90
exit90
exit()
import netifaces as ni
ni.ifaddresses(interface)[ni.AF_INET][0]['addr']
ni.ifaddresses("wlan0")[ni.AF_INET][0]['addr']
import pysftp
sftp = pysftp.Connection("ez-streamer.com","000002@ez-streamer.com","000002@@10000000ef4d922b")
sftp = pysftp.Connection("ez-streamer.com",username="000002@ez-streamer.com",password="000002@@10000000ef4d922b")
exit90
import pysftp
sftp = pysftp.Connection("ez-streamer.com",username="000002@ez-streamer.com",password="P1xC0ntr0ll3r")
ftps = FTP_TLS('ftp.ez-streamer.com')
from ftplib import FTPs
from ftplib import FTP
ftps = FTP_TLS('ftp.ez-streamer.com')
from ftplib import FTP_TLS
ftps = FTP_TLS('ftp.ez-streamer.com')
ftps.login()
ftps.auth()
ftps.prot_p()
ftps.login("000002@ez-streamer.com","P1xC0ntr0ll3r")
ftps.nlst()
ftps.close()
exit
import os
path, directories, files in os.walk("../transfer/auth/")
for path, directories, files in os.walk("../transfer/auth/"):
print(path)
	print(path)
from ftplib import FTP_TLS
ftps = ftplib.FTP_TLS("ftp.ez-streamer.com")
ftps = FTP_TLS("ftp.ez-streamer.com")
from ftplib import FTP_TLS
ftps = FTP_TLS("ftp.ez-streamer.com")
ftps.prot_p()
ftps.auth()
ftps.prot_p()
s
import hashlib
from netaddr import IPAddress
exit
from netaddr import IPAddress
IPAddress('255.255.255.0').netmask_bits()
netmask = 255.255.255.0
netmask = "255.255.255.0"
IPAddress(netmask).netmask_bits()
